basePath: /api/v1
definitions:
  handlers.CreateCategoryRequest:
    properties:
      imageURL:
        type: string
      name:
        type: string
    type: object
  handlers.UpdateCategoryRequest:
    properties:
      imageURL:
        type: string
      name:
        type: string
    type: object
  models.JSONReponseMany:
    properties:
      code:
        type: integer
      count:
        type: integer
      data: {}
      errors:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      limit:
        type: integer
      offset:
        type: integer
      success:
        type: boolean
    type: object
  models.JSONReponseOne:
    properties:
      code:
        type: integer
      data: {}
      success:
        type: boolean
    type: object
  services.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  services.NewTokenInput:
    properties:
      refreshToken:
        type: string
    type: object
host: localhost:4000
info:
  contact:
    name: API Support
  description: This is a sample server for a fake store API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fake Store API
  version: "1.0"
paths:
  /auth/data:
    get:
      consumes:
      - application/json
      description: Get data from token
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONReponseOne'
      summary: Get token data from token
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: get a data of a user logged
      parameters:
      - description: Login credentials
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/services.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONReponseOne'
      summary: Log in as a user using username and password
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Get data from token
      parameters:
      - description: refresh token credential
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/services.NewTokenInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONReponseOne'
      summary: Generate a new access token for user
      tags:
      - Auth
  /category:
    get:
      consumes:
      - application/json
      description: Fetch category by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONReponseOne'
      summary: Fetch category by ID
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: Create a category
      parameters:
      - description: Category body request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONReponseOne'
      summary: Create a category
      tags:
      - Category
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONReponseOne'
      summary: Delete a category
      tags:
      - Category
    put:
      consumes:
      - application/json
      description: Update a category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Category body request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONReponseOne'
      summary: Update a category
      tags:
      - Category
swagger: "2.0"
